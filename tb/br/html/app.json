[{"name":"app.R","content":"library(shiny)\n\n\nsource(\"global.R\", local = T)\n\n\nsource(\"ui.R\")\nsource(\"server.R\")\n\n\n# Run the application \nshinyApp(ui = ui, server = server)\n\n","type":"text"},{"name":"server.R","content":"server <- function(input, output) {\n    output$plot_4 <- renderPlot({\n        df_4_s <- subset(df_4, year == input$year)\n        ggplot(df_4_s, aes(x = month, y = cases)) +\n            geom_bar(stat = \"identity\", fill = \"steelblue\") +\n            theme_minimal() +\n            labs(\n                title = \"Total de casos\",\n                x = \"Mês\",\n                y = \"Número de casos\"\n            ) +\n            theme(axis.text.x = element_text(angle = 45, hjust = 1))\n    })\n\n    output$plot_3 <- renderPlot({\n        df_3_s <- subset(df_3, year == input$year)\n\n        ggplot(df_3_s, aes(x = month, y = cases, fill = clinical_presentation, group = clinical_presentation)) +\n            geom_area() +\n            theme_classic() +\n            theme(legend.position = \"bottom\") +\n            labs(fill = \"Apresentação clínica\", y = \"Número de casos\", x = \"Mês\")\n    })\n\n    output$plot_2 <- renderPlot({\n        # req(input$year)\n        df_2_s <- subset(df_2, year == input$year)\n\n        ggplot(df_2_s, aes(x = month, y = cases, group = age_group, color = age_group)) +\n            geom_line(size = 2, alpha = 0.7) + # Add the line\n            geom_point(size = 5, alpha = 0.7) + # Add points at each data point\n            theme_classic() + # Use a minimal theme\n            labs(\n                x = \"Mês\",\n                y = \"Número de casos\",\n                color = \"Faixa etária\" # Change the legend title\n            ) +\n            theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n            theme(legend.position = \"bottom\")\n    })\n}\n\n","type":"text"},{"name":"ui.R","content":"ui <-page_fillable(\n    card(\n        full_screen = TRUE,\n        layout_sidebar(\n            sidebar = sidebar(\n                selectInput(\n                    \"year\",\n                    \"Ano\",\n                    choices = list(\"2023\" = 2023, \"2024\" = 2024),\n                    selected = 1\n                ),\n                position = \"right\"\n            ),\n            plotOutput(\"plot_4\")\n        )\n    ),\n    layout_columns(\n        card(\n            full_screen = TRUE,\n            plotOutput(\"plot_2\")\n        ),\n        card(\n            full_screen = TRUE,\n            plotOutput(\"plot_3\")\n        )\n    )\n)","type":"text"},{"name":"global.R","content":"library(shiny)\nlibrary(bslib)\nlibrary(ggplot2)\n\n# SERVER_URL = \"https://triplice-fronteira.netlify.app\"\nSERVER_URL = \"https://triplice.gcgbarbosa.com\"\n# SERVER_URL = \"http://localhost:8080\"\n#\nmonths_vector <- c(\n    \"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\",\n    \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"\n)\n# Create a named vector mapping month names to their respective numerical levels\nmonths_levels <- c(\n    \"Jan\" = 1, \"Fev\" = 2, \"Mar\" = 3, \"Abr\" = 4, \"Mai\" = 5,\n    \"Jun\" = 6, \"Jul\" = 7, \"Ago\" = 8, \"Set\" = 9, \"Out\" = 10,\n    \"Nov\" = 11, \"Dez\" = 12\n)\n\n# reading plot4\n\ndf_4 <- read.csv(paste0(SERVER_URL, \"/assets/br_tb_4.csv\"))\ndf_4$month <- factor(df_4$month,\n    levels = names(months_levels),\n    labels = names(months_levels)\n)\n# df_4 <- subset(df_4, year == 2023)\n\n# reading plot3\ndf_3 <- read.csv(paste0(SERVER_URL, \"/assets/br_tb_3.csv\"))\ndf_3$month <- factor(df_3$month,\n    levels = names(months_levels),\n    labels = names(months_levels)\n)\n# df_3 <- subset(df_3, year == 2023)\n\n# reading plot3\ndf_2 <- read.csv(paste0(SERVER_URL, \"/assets/br_tb_2.csv\"))\ndf_2$month <- factor(df_2$month,\n    levels = names(months_levels),\n    labels = names(months_levels)\n)\n# df_2 <- subset(df_2, year == 2023)\n\n\n","type":"text"}]
